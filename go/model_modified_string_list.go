/*
 * Materialize Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mzcloud

import (
	"encoding/json"
)

// ModifiedStringList struct for ModifiedStringList
type ModifiedStringList struct {
	Old []string `json:"old"`
	New []string `json:"new"`
}

// NewModifiedStringList instantiates a new ModifiedStringList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifiedStringList(old []string, new []string) *ModifiedStringList {
	this := ModifiedStringList{}
	this.Old = old
	this.New = new
	return &this
}

// NewModifiedStringListWithDefaults instantiates a new ModifiedStringList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifiedStringListWithDefaults() *ModifiedStringList {
	this := ModifiedStringList{}
	return &this
}

// GetOld returns the Old field value
func (o *ModifiedStringList) GetOld() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Old
}

// GetOldOk returns a tuple with the Old field value
// and a boolean to check if the value has been set.
func (o *ModifiedStringList) GetOldOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Old, true
}

// SetOld sets field value
func (o *ModifiedStringList) SetOld(v []string) {
	o.Old = v
}

// GetNew returns the New field value
func (o *ModifiedStringList) GetNew() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.New
}

// GetNewOk returns a tuple with the New field value
// and a boolean to check if the value has been set.
func (o *ModifiedStringList) GetNewOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.New, true
}

// SetNew sets field value
func (o *ModifiedStringList) SetNew(v []string) {
	o.New = v
}

func (o ModifiedStringList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["old"] = o.Old
	}
	if true {
		toSerialize["new"] = o.New
	}
	return json.Marshal(toSerialize)
}

type NullableModifiedStringList struct {
	value *ModifiedStringList
	isSet bool
}

func (v NullableModifiedStringList) Get() *ModifiedStringList {
	return v.value
}

func (v *NullableModifiedStringList) Set(val *ModifiedStringList) {
	v.value = val
	v.isSet = true
}

func (v NullableModifiedStringList) IsSet() bool {
	return v.isSet
}

func (v *NullableModifiedStringList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifiedStringList(val *ModifiedStringList) *NullableModifiedStringList {
	return &NullableModifiedStringList{value: val, isSet: true}
}

func (v NullableModifiedStringList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifiedStringList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


