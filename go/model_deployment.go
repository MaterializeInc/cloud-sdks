/*
 * Materialize Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mzcloud

import (
	"encoding/json"
)

// Deployment struct for Deployment
type Deployment struct {
	Id string `json:"id"`
	Organization string `json:"organization"`
	TlsAuthority string `json:"tlsAuthority"`
	Name string `json:"name"`
	Hostname NullableString `json:"hostname"`
	FlaggedForDeletion bool `json:"flaggedForDeletion"`
	FlaggedForUpdate bool `json:"flaggedForUpdate"`
	Size *DeploymentSize `json:"size,omitempty"`
	ClusterId NullableString `json:"clusterId"`
	MzVersion string `json:"mzVersion"`
	PendingMigration NullablePendingMigration `json:"pendingMigration"`
	StatefulsetStatus string `json:"statefulsetStatus"`
}

// NewDeployment instantiates a new Deployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployment(id string, organization string, tlsAuthority string, name string, hostname NullableString, flaggedForDeletion bool, flaggedForUpdate bool, clusterId NullableString, mzVersion string, pendingMigration NullablePendingMigration, statefulsetStatus string) *Deployment {
	this := Deployment{}
	this.Id = id
	this.Organization = organization
	this.TlsAuthority = tlsAuthority
	this.Name = name
	this.Hostname = hostname
	this.FlaggedForDeletion = flaggedForDeletion
	this.FlaggedForUpdate = flaggedForUpdate
	this.ClusterId = clusterId
	this.MzVersion = mzVersion
	this.PendingMigration = pendingMigration
	this.StatefulsetStatus = statefulsetStatus
	return &this
}

// NewDeploymentWithDefaults instantiates a new Deployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentWithDefaults() *Deployment {
	this := Deployment{}
	return &this
}

// GetId returns the Id field value
func (o *Deployment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Deployment) SetId(v string) {
	o.Id = v
}

// GetOrganization returns the Organization field value
func (o *Deployment) GetOrganization() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetOrganizationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *Deployment) SetOrganization(v string) {
	o.Organization = v
}

// GetTlsAuthority returns the TlsAuthority field value
func (o *Deployment) GetTlsAuthority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TlsAuthority
}

// GetTlsAuthorityOk returns a tuple with the TlsAuthority field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetTlsAuthorityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TlsAuthority, true
}

// SetTlsAuthority sets field value
func (o *Deployment) SetTlsAuthority(v string) {
	o.TlsAuthority = v
}

// GetName returns the Name field value
func (o *Deployment) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Deployment) SetName(v string) {
	o.Name = v
}

// GetHostname returns the Hostname field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetHostname() string {
	if o == nil || o.Hostname.Get() == nil {
		var ret string
		return ret
	}

	return *o.Hostname.Get()
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetHostnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Hostname.Get(), o.Hostname.IsSet()
}

// SetHostname sets field value
func (o *Deployment) SetHostname(v string) {
	o.Hostname.Set(&v)
}

// GetFlaggedForDeletion returns the FlaggedForDeletion field value
func (o *Deployment) GetFlaggedForDeletion() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FlaggedForDeletion
}

// GetFlaggedForDeletionOk returns a tuple with the FlaggedForDeletion field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetFlaggedForDeletionOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FlaggedForDeletion, true
}

// SetFlaggedForDeletion sets field value
func (o *Deployment) SetFlaggedForDeletion(v bool) {
	o.FlaggedForDeletion = v
}

// GetFlaggedForUpdate returns the FlaggedForUpdate field value
func (o *Deployment) GetFlaggedForUpdate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FlaggedForUpdate
}

// GetFlaggedForUpdateOk returns a tuple with the FlaggedForUpdate field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetFlaggedForUpdateOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FlaggedForUpdate, true
}

// SetFlaggedForUpdate sets field value
func (o *Deployment) SetFlaggedForUpdate(v bool) {
	o.FlaggedForUpdate = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Deployment) GetSize() DeploymentSize {
	if o == nil || o.Size == nil {
		var ret DeploymentSize
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetSizeOk() (*DeploymentSize, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Deployment) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given DeploymentSize and assigns it to the Size field.
func (o *Deployment) SetSize(v DeploymentSize) {
	o.Size = &v
}

// GetClusterId returns the ClusterId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetClusterId() string {
	if o == nil || o.ClusterId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ClusterId.Get()
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetClusterIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClusterId.Get(), o.ClusterId.IsSet()
}

// SetClusterId sets field value
func (o *Deployment) SetClusterId(v string) {
	o.ClusterId.Set(&v)
}

// GetMzVersion returns the MzVersion field value
func (o *Deployment) GetMzVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MzVersion
}

// GetMzVersionOk returns a tuple with the MzVersion field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetMzVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MzVersion, true
}

// SetMzVersion sets field value
func (o *Deployment) SetMzVersion(v string) {
	o.MzVersion = v
}

// GetPendingMigration returns the PendingMigration field value
// If the value is explicit nil, the zero value for PendingMigration will be returned
func (o *Deployment) GetPendingMigration() PendingMigration {
	if o == nil || o.PendingMigration.Get() == nil {
		var ret PendingMigration
		return ret
	}

	return *o.PendingMigration.Get()
}

// GetPendingMigrationOk returns a tuple with the PendingMigration field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetPendingMigrationOk() (*PendingMigration, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PendingMigration.Get(), o.PendingMigration.IsSet()
}

// SetPendingMigration sets field value
func (o *Deployment) SetPendingMigration(v PendingMigration) {
	o.PendingMigration.Set(&v)
}

// GetStatefulsetStatus returns the StatefulsetStatus field value
func (o *Deployment) GetStatefulsetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatefulsetStatus
}

// GetStatefulsetStatusOk returns a tuple with the StatefulsetStatus field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetStatefulsetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StatefulsetStatus, true
}

// SetStatefulsetStatus sets field value
func (o *Deployment) SetStatefulsetStatus(v string) {
	o.StatefulsetStatus = v
}

func (o Deployment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["organization"] = o.Organization
	}
	if true {
		toSerialize["tlsAuthority"] = o.TlsAuthority
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["hostname"] = o.Hostname.Get()
	}
	if true {
		toSerialize["flaggedForDeletion"] = o.FlaggedForDeletion
	}
	if true {
		toSerialize["flaggedForUpdate"] = o.FlaggedForUpdate
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["clusterId"] = o.ClusterId.Get()
	}
	if true {
		toSerialize["mzVersion"] = o.MzVersion
	}
	if true {
		toSerialize["pendingMigration"] = o.PendingMigration.Get()
	}
	if true {
		toSerialize["statefulsetStatus"] = o.StatefulsetStatus
	}
	return json.Marshal(toSerialize)
}

type NullableDeployment struct {
	value *Deployment
	isSet bool
}

func (v NullableDeployment) Get() *Deployment {
	return v.value
}

func (v *NullableDeployment) Set(val *Deployment) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployment(val *Deployment) *NullableDeployment {
	return &NullableDeployment{value: val, isSet: true}
}

func (v NullableDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


