/*
 * Materialize Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mzcloud

import (
	"encoding/json"
	"time"
)

// HistoricalDeploymentMetadata struct for HistoricalDeploymentMetadata
type HistoricalDeploymentMetadata struct {
	Date time.Time `json:"date"`
	User string `json:"user"`
	Operation OperationEnum `json:"operation"`
}

// NewHistoricalDeploymentMetadata instantiates a new HistoricalDeploymentMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHistoricalDeploymentMetadata(date time.Time, user string, operation OperationEnum) *HistoricalDeploymentMetadata {
	this := HistoricalDeploymentMetadata{}
	this.Date = date
	this.User = user
	this.Operation = operation
	return &this
}

// NewHistoricalDeploymentMetadataWithDefaults instantiates a new HistoricalDeploymentMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHistoricalDeploymentMetadataWithDefaults() *HistoricalDeploymentMetadata {
	this := HistoricalDeploymentMetadata{}
	return &this
}

// GetDate returns the Date field value
func (o *HistoricalDeploymentMetadata) GetDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *HistoricalDeploymentMetadata) GetDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *HistoricalDeploymentMetadata) SetDate(v time.Time) {
	o.Date = v
}

// GetUser returns the User field value
func (o *HistoricalDeploymentMetadata) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *HistoricalDeploymentMetadata) GetUserOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *HistoricalDeploymentMetadata) SetUser(v string) {
	o.User = v
}

// GetOperation returns the Operation field value
func (o *HistoricalDeploymentMetadata) GetOperation() OperationEnum {
	if o == nil {
		var ret OperationEnum
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *HistoricalDeploymentMetadata) GetOperationOk() (*OperationEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *HistoricalDeploymentMetadata) SetOperation(v OperationEnum) {
	o.Operation = v
}

func (o HistoricalDeploymentMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["date"] = o.Date
	}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["operation"] = o.Operation
	}
	return json.Marshal(toSerialize)
}

type NullableHistoricalDeploymentMetadata struct {
	value *HistoricalDeploymentMetadata
	isSet bool
}

func (v NullableHistoricalDeploymentMetadata) Get() *HistoricalDeploymentMetadata {
	return v.value
}

func (v *NullableHistoricalDeploymentMetadata) Set(val *HistoricalDeploymentMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableHistoricalDeploymentMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableHistoricalDeploymentMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHistoricalDeploymentMetadata(val *HistoricalDeploymentMetadata) *NullableHistoricalDeploymentMetadata {
	return &NullableHistoricalDeploymentMetadata{value: val, isSet: true}
}

func (v NullableHistoricalDeploymentMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHistoricalDeploymentMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


