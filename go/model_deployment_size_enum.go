/*
 * Materialize Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mzcloud

import (
	"encoding/json"
	"fmt"
)

// DeploymentSizeEnum the model 'DeploymentSizeEnum'
type DeploymentSizeEnum string

// List of DeploymentSizeEnum
const (
	XS DeploymentSizeEnum = "XS"
	S DeploymentSizeEnum = "S"
	M DeploymentSizeEnum = "M"
	L DeploymentSizeEnum = "L"
	XL DeploymentSizeEnum = "XL"
)

var allowedDeploymentSizeEnumEnumValues = []DeploymentSizeEnum{
	"XS",
	"S",
	"M",
	"L",
	"XL",
}

func (v *DeploymentSizeEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeploymentSizeEnum(value)
	for _, existing := range allowedDeploymentSizeEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeploymentSizeEnum", value)
}

// NewDeploymentSizeEnumFromValue returns a pointer to a valid DeploymentSizeEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeploymentSizeEnumFromValue(v string) (*DeploymentSizeEnum, error) {
	ev := DeploymentSizeEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeploymentSizeEnum: valid values are %v", v, allowedDeploymentSizeEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeploymentSizeEnum) IsValid() bool {
	for _, existing := range allowedDeploymentSizeEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DeploymentSizeEnum value
func (v DeploymentSizeEnum) Ptr() *DeploymentSizeEnum {
	return &v
}

type NullableDeploymentSizeEnum struct {
	value *DeploymentSizeEnum
	isSet bool
}

func (v NullableDeploymentSizeEnum) Get() *DeploymentSizeEnum {
	return v.value
}

func (v *NullableDeploymentSizeEnum) Set(val *DeploymentSizeEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentSizeEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentSizeEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentSizeEnum(val *DeploymentSizeEnum) *NullableDeploymentSizeEnum {
	return &NullableDeploymentSizeEnum{value: val, isSet: true}
}

func (v NullableDeploymentSizeEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentSizeEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

