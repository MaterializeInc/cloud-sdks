/*
 * Materialize Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mzcloud

import (
	"encoding/json"
	"time"
)

// Organization struct for Organization
type Organization struct {
	Id string `json:"id"`
	DeploymentLimit int32 `json:"deploymentLimit"`
	// When this organization's trial period expires. If empty, the organization is on an enterprise plan.
	TrialExpiresAt NullableTime `json:"trialExpiresAt"`
}

// NewOrganization instantiates a new Organization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganization(id string, deploymentLimit int32, trialExpiresAt NullableTime) *Organization {
	this := Organization{}
	this.Id = id
	this.DeploymentLimit = deploymentLimit
	this.TrialExpiresAt = trialExpiresAt
	return &this
}

// NewOrganizationWithDefaults instantiates a new Organization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationWithDefaults() *Organization {
	this := Organization{}
	return &this
}

// GetId returns the Id field value
func (o *Organization) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Organization) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Organization) SetId(v string) {
	o.Id = v
}

// GetDeploymentLimit returns the DeploymentLimit field value
func (o *Organization) GetDeploymentLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DeploymentLimit
}

// GetDeploymentLimitOk returns a tuple with the DeploymentLimit field value
// and a boolean to check if the value has been set.
func (o *Organization) GetDeploymentLimitOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DeploymentLimit, true
}

// SetDeploymentLimit sets field value
func (o *Organization) SetDeploymentLimit(v int32) {
	o.DeploymentLimit = v
}

// GetTrialExpiresAt returns the TrialExpiresAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Organization) GetTrialExpiresAt() time.Time {
	if o == nil || o.TrialExpiresAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.TrialExpiresAt.Get()
}

// GetTrialExpiresAtOk returns a tuple with the TrialExpiresAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Organization) GetTrialExpiresAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TrialExpiresAt.Get(), o.TrialExpiresAt.IsSet()
}

// SetTrialExpiresAt sets field value
func (o *Organization) SetTrialExpiresAt(v time.Time) {
	o.TrialExpiresAt.Set(&v)
}

func (o Organization) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["deploymentLimit"] = o.DeploymentLimit
	}
	if true {
		toSerialize["trialExpiresAt"] = o.TrialExpiresAt.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOrganization struct {
	value *Organization
	isSet bool
}

func (v NullableOrganization) Get() *Organization {
	return v.value
}

func (v *NullableOrganization) Set(val *Organization) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganization(val *Organization) *NullableOrganization {
	return &NullableOrganization{value: val, isSet: true}
}

func (v NullableOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


