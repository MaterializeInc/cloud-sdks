/*
 * Materialize Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mzcloud

import (
	"encoding/json"
)

// ModifiedSize struct for ModifiedSize
type ModifiedSize struct {
	Old DeploymentSizeEnum `json:"old"`
	New DeploymentSizeEnum `json:"new"`
}

// NewModifiedSize instantiates a new ModifiedSize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifiedSize(old DeploymentSizeEnum, new DeploymentSizeEnum) *ModifiedSize {
	this := ModifiedSize{}
	this.Old = old
	this.New = new
	return &this
}

// NewModifiedSizeWithDefaults instantiates a new ModifiedSize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifiedSizeWithDefaults() *ModifiedSize {
	this := ModifiedSize{}
	return &this
}

// GetOld returns the Old field value
func (o *ModifiedSize) GetOld() DeploymentSizeEnum {
	if o == nil {
		var ret DeploymentSizeEnum
		return ret
	}

	return o.Old
}

// GetOldOk returns a tuple with the Old field value
// and a boolean to check if the value has been set.
func (o *ModifiedSize) GetOldOk() (*DeploymentSizeEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Old, true
}

// SetOld sets field value
func (o *ModifiedSize) SetOld(v DeploymentSizeEnum) {
	o.Old = v
}

// GetNew returns the New field value
func (o *ModifiedSize) GetNew() DeploymentSizeEnum {
	if o == nil {
		var ret DeploymentSizeEnum
		return ret
	}

	return o.New
}

// GetNewOk returns a tuple with the New field value
// and a boolean to check if the value has been set.
func (o *ModifiedSize) GetNewOk() (*DeploymentSizeEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.New, true
}

// SetNew sets field value
func (o *ModifiedSize) SetNew(v DeploymentSizeEnum) {
	o.New = v
}

func (o ModifiedSize) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["old"] = o.Old
	}
	if true {
		toSerialize["new"] = o.New
	}
	return json.Marshal(toSerialize)
}

type NullableModifiedSize struct {
	value *ModifiedSize
	isSet bool
}

func (v NullableModifiedSize) Get() *ModifiedSize {
	return v.value
}

func (v *NullableModifiedSize) Set(val *ModifiedSize) {
	v.value = val
	v.isSet = true
}

func (v NullableModifiedSize) IsSet() bool {
	return v.isSet
}

func (v *NullableModifiedSize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifiedSize(val *ModifiedSize) *NullableModifiedSize {
	return &NullableModifiedSize{value: val, isSet: true}
}

func (v NullableModifiedSize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifiedSize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


