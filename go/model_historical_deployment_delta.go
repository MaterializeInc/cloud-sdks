/*
 * Materialize Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mzcloud

import (
	"encoding/json"
)

// HistoricalDeploymentDelta struct for HistoricalDeploymentDelta
type HistoricalDeploymentDelta struct {
	Changes HistoricalDeploymentChange `json:"changes"`
	Metadata HistoricalDeploymentMetadata `json:"metadata"`
}

// NewHistoricalDeploymentDelta instantiates a new HistoricalDeploymentDelta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHistoricalDeploymentDelta(changes HistoricalDeploymentChange, metadata HistoricalDeploymentMetadata) *HistoricalDeploymentDelta {
	this := HistoricalDeploymentDelta{}
	this.Changes = changes
	this.Metadata = metadata
	return &this
}

// NewHistoricalDeploymentDeltaWithDefaults instantiates a new HistoricalDeploymentDelta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHistoricalDeploymentDeltaWithDefaults() *HistoricalDeploymentDelta {
	this := HistoricalDeploymentDelta{}
	return &this
}

// GetChanges returns the Changes field value
func (o *HistoricalDeploymentDelta) GetChanges() HistoricalDeploymentChange {
	if o == nil {
		var ret HistoricalDeploymentChange
		return ret
	}

	return o.Changes
}

// GetChangesOk returns a tuple with the Changes field value
// and a boolean to check if the value has been set.
func (o *HistoricalDeploymentDelta) GetChangesOk() (*HistoricalDeploymentChange, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Changes, true
}

// SetChanges sets field value
func (o *HistoricalDeploymentDelta) SetChanges(v HistoricalDeploymentChange) {
	o.Changes = v
}

// GetMetadata returns the Metadata field value
func (o *HistoricalDeploymentDelta) GetMetadata() HistoricalDeploymentMetadata {
	if o == nil {
		var ret HistoricalDeploymentMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *HistoricalDeploymentDelta) GetMetadataOk() (*HistoricalDeploymentMetadata, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *HistoricalDeploymentDelta) SetMetadata(v HistoricalDeploymentMetadata) {
	o.Metadata = v
}

func (o HistoricalDeploymentDelta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["changes"] = o.Changes
	}
	if true {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableHistoricalDeploymentDelta struct {
	value *HistoricalDeploymentDelta
	isSet bool
}

func (v NullableHistoricalDeploymentDelta) Get() *HistoricalDeploymentDelta {
	return v.value
}

func (v *NullableHistoricalDeploymentDelta) Set(val *HistoricalDeploymentDelta) {
	v.value = val
	v.isSet = true
}

func (v NullableHistoricalDeploymentDelta) IsSet() bool {
	return v.isSet
}

func (v *NullableHistoricalDeploymentDelta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHistoricalDeploymentDelta(val *HistoricalDeploymentDelta) *NullableHistoricalDeploymentDelta {
	return &NullableHistoricalDeploymentDelta{value: val, isSet: true}
}

func (v NullableHistoricalDeploymentDelta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHistoricalDeploymentDelta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


