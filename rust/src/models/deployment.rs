/*
 * Materialize Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Deployment {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "organization")]
    pub organization: String,
    #[serde(rename = "tlsAuthority")]
    pub tls_authority: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "hostname")]
    pub hostname: Option<String>,
    #[serde(rename = "flaggedForDeletion")]
    pub flagged_for_deletion: bool,
    #[serde(rename = "flaggedForUpdate")]
    pub flagged_for_update: bool,
    #[serde(rename = "size")]
    pub size: Box<crate::models::SizeEnum>,
    #[serde(rename = "storageMb")]
    pub storage_mb: i32,
    #[serde(rename = "materializedExtraArgs")]
    pub materialized_extra_args: Vec<String>,
    #[serde(rename = "clusterId")]
    pub cluster_id: Option<String>,
    #[serde(rename = "mzVersion")]
    pub mz_version: String,
    #[serde(rename = "pendingMigration")]
    pub pending_migration: Option<Box<crate::models::PendingMigration>>,
    #[serde(rename = "statefulsetStatus")]
    pub statefulset_status: String,
}

impl Deployment {
    pub fn new(id: String, organization: String, tls_authority: String, name: String, hostname: Option<String>, flagged_for_deletion: bool, flagged_for_update: bool, size: crate::models::SizeEnum, storage_mb: i32, materialized_extra_args: Vec<String>, cluster_id: Option<String>, mz_version: String, pending_migration: Option<crate::models::PendingMigration>, statefulset_status: String) -> Deployment {
        Deployment {
            id,
            organization,
            tls_authority,
            name,
            hostname,
            flagged_for_deletion,
            flagged_for_update,
            size: Box::new(size),
            storage_mb,
            materialized_extra_args,
            cluster_id,
            mz_version,
            pending_migration: pending_migration.map(Box::new),
            statefulset_status,
        }
    }
}


