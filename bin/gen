#!/usr/bin/env bash

# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License in the LICENSE file at the
# root of this repository, or online at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -euo pipefail

gen() {
    docker run \
        --rm \
        --user $(id -u):$(id -g) \
        -v $PWD:/work \
        openapitools/openapi-generator:cli-v5.2.0 generate \
        -i /work/schema.yml \
        "$@"
}

rm_standard() {
    rm -rf docs git_push.sh .travis.yml .openapi-generator
}

gen_go() {
    rm -rf go
    gen -g go -o /work/go --package-name mzcloud --git-user-id MaterializeInc --git-repo-id cloud-sdks
    (cd go && rm_standard && rm -rf go/api && go mod tidy \
        && sed -i.bak 's,cloud-sdks,cloud-sdks/go,' go.mod)
}

gen_python() {
    rm -rf python
    pipx run --spec openapi-python-client==0.10.1 openapi-python-client \
        generate --path schema.yml --config <(echo '{"project_name_override": "mzcloud"}')
    mv mzcloud python
    (cd python && rm_standard)
}

gen_rust() {
    rm -rf rust
    gen -g rust -o /work/rust --package-name mzcloud
    (cd rust && rm_standard)
    patch -p1 < rust.patch
}

if (($# > 0)); then
    langs=("$@")
else
    langs=(go python rust)
fi

for lang in "${langs[@]}"; do
    gen_"$lang"
done
